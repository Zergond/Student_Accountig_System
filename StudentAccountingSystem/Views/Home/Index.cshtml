@model IEnumerable<DAL.Entities.Models.Student>

@{
    ViewBag.Title = "Index";
}
<h2>Index</h2>

<p>
    @Html.ActionLink("Create New", "Create")
</p>


<div id="jsGrid"></div>
<div class="form-group">
    <div class="input-group">
        <div class="input-group-addon">
            <i class="fa fa-calendar"></i>
        </div>
        <input id="datemask" type="text" class="form-control" data-inputmask="'alias': 'mm/dd/yyyy'" data-mask>
    </div>
    <!-- /.input group -->
</div>

@section scripts {
    <script src="~/Scripts/Admin/jsgrid.min.js"></script>
    <script src="~/Scripts/Admin/InputMask/jquery.inputmask.min.js"></script>
    <script src="~/Scripts/Admin/InputMask/jquery.inputmask.date.extensions.min.js"></script>
    <script src="~/Scripts/Admin/InputMask/jquery.inputmask.extensions.min.js"></script>


    <script>
        $(document).ready($(function () {
            $('#datemask').inputmask('mm/dd/yyyy', { 'placeholder': 'mm/dd/yyyy' })
            $("#jsGrid").jsGrid({
                height: "auto",
                width: "100%",

                filtering: false,
                inserting: false,
                editing: false,
                sorting: true,
                paging: true,
                autoload: true,
                pageLoading: true,

                pageSize: 1,
                pageIndex: 1,

                deleteConfirm: "Do you really want to delete this student?",

                controller: {
                    loadData: function (filter) {
                        var def = $.Deferred();
                         $.ajax({
                            type: "post",
                            url: "/Home/GetStudents",
                            data: filter,
                            dataType: "json",
                            success: function (datas) {
                                var da = {
                                    data: datas.studentdata,
                                    itemsCount: datas.count
                                }
                                def.resolve(da);
                            }
                        });
                         return def.promise();

                    }
                },
            

                fields: [
                    { name: "Id", type: "text", editing: false, width: 150 },
                    { name: "Name", type: "text", width: 150 },
                    { name: "LastName", type: "text", width: 150 },
                    { name: "Age", type: "text", width: 50 },
                    { name: "RegisteredDate", type: "text", width: 150},
                    { name: "StudyDate", type: "text", width: 150 }
                ]
            });

        }));
    </script>
}

